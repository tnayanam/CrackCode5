#include <iostream>
#include <stack>
using namespace std;

class MyQueue
{
	stack<int> s1;
	stack<int> s2;
	stack<int> s3;
public:
	void enqueue(int num);
	void dequeue();
	void display();
};

void MyQueue::enqueue(int num)
{
	s1.push(num);
}

void MyQueue::dequeue()
{
	while (!s1.empty())
	{
		s2.push(s1.top());
		s1.pop();
	}
	s2.pop();
	while (!s2.empty())
	{
		s1.push(s2.top());
		s2.pop();
	}
}

void MyQueue::display()
{
	int size = s1.size();
	for (int i = 0; i < size; i++)
	{
		cout << s1.top() << " ";
		s3.push(s1.top());
		s1.pop();
	}

	for (int i = 0; i < size; i++)
	{
		s1.push(s3.top());
		s3.pop();
	}
}

int main()
{
	MyQueue q1;
	bool operate = true;
	int ch = 1;
	int elem;
	while (operate)
	{
		cout << "\n1. Enqueue";
		cout << "\n2. Dequeue\n";
		cout << "Display\n";
		cout << "Enter Your Choice\n";
		cin >> ch;
		switch (ch)
		{
		case 1:
			cout << "Enter the number in the queue";
			cin >> elem;
			q1.enqueue(elem);
			break;
		case 2:
			q1.dequeue();
			break;
		case 3:
			q1.display();
			break;
		default:
			operate = false;
			break;
		}
	}
}